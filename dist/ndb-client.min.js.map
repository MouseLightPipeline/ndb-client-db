{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ndb-client.min.js","webpack:///webpack/bootstrap aaf3b874c9c2574fa230","webpack:///./src/dataService.ts","webpack:///./src/entityStore.ts","webpack:///./src/brainAreaService.ts","webpack:///./src/fluorophoreService.ts","webpack:///./src/injectionService.ts","webpack:///./src/injectionVirusService.ts","webpack:///./src/mouseStrainService.ts","webpack:///./src/neuronService.ts","webpack:///./src/registrationTransformService.ts","webpack:///./src/sampleService.ts","webpack:///./src/structureIdentifierService.ts","webpack:///./src/tracingNodeService.ts","webpack:///./src/tracingService.ts","webpack:///external \"angular\""],"names":["root","factory","exports","module","require","define","amd","angular","this","__WEBPACK_EXTERNAL_MODULE_14__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__extends","d","b","__","constructor","hasOwnProperty","prototype","Object","create","entityStore_1","DataService","$resource","_entityStore","EntityStore","resourcesAreAvailable","apiLocation","setLocation","resourceLocation","createResource","refreshData","_this","clear","Promise","resolve","dataSource","query","data","registerNewItems","update","resourceClass","createItem","reject","save","$promise","then","obj","get","item","registerNewItem","err","find","findItem","getDisplayName","defaultValue","name","getDisplayNameForId","createCustomResourceMethods","defineProperty","enumerable","configurable","mapQueriedItem","createdAt","Date","updatedAt","addItem","items","map","where","fcn","whereAll","length","location","method","url","resourcePath","$inject","NumberedItemDataService","_super","apply","arguments","findWithIdNumber","idNumber","NamedItemDataService","findWithName","toLowerCase","idKey","_store","_array","_idKey","keys","forEach","key","findObject","insertItem","addItems","removeItem","deleteItem","removeItems","filter","getKey","push","index","indexOf","splice","dataService_1","BrainAreaDepthEntry","BrainAreaService","queryForDepth","apiUrl","params","depth","isArray","queryForParent","parentId","brainAreasForDepth","service","brainAreasForParent","FluorophoreService","InjectionService","injectionVirusService","brainAreaService","injectionSampleMap","injectionsForSample","list","sampleId","undefined","matching","injections","brainAreaId","injectionVirusId","InjectionVirusService","MouseStrainService","NeuronService","neuronInjectionMap","rawObj","injectionId","neuronsForInjection","neurons","tag","toString","RegistrationTransformService","lpad","n","width","z","str","Array","join","SampleService","sampleDate","date","getFullYear","getMonth","getDate","StructureIdentifierService","TracingNodeService","nodesForStructure","structureId","ng","TracingService","$http","nodes","uploadSwcFile","theFile","tracingInfo","fd","FormData","append","post","transformRequest","identity","headers","Content-Type","result","fullItem","error","console","log"],"mappings":"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","file":"ndb-client.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ndb-client\", [\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ndb-client\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"ndb-client\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_14__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ndb-client\", [\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ndb-client\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"ndb-client\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_14__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(2);\n\t__webpack_require__(1);\n\t__webpack_require__(3);\n\t__webpack_require__(4);\n\t__webpack_require__(5);\n\t__webpack_require__(6);\n\t__webpack_require__(7);\n\t__webpack_require__(8);\n\t__webpack_require__(9);\n\t__webpack_require__(10);\n\t__webpack_require__(11);\n\t__webpack_require__(12);\n\tmodule.exports = __webpack_require__(13);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar entityStore_1 = __webpack_require__(2);\n\tvar DataService = (function () {\n\t    function DataService($resource) {\n\t        this.$resource = $resource;\n\t        this._entityStore = new entityStore_1.EntityStore();\n\t        this.resourcesAreAvailable = false;\n\t        this.apiLocation = \"\";\n\t    }\n\t    DataService.prototype.setLocation = function (resourceLocation) {\n\t        this.resourcesAreAvailable = false;\n\t        this.apiLocation = resourceLocation;\n\t        this.createResource(this.apiLocation);\n\t        return this.refreshData();\n\t    };\n\t    DataService.prototype.refreshData = function () {\n\t        var _this = this;\n\t        this.resourcesAreAvailable = false;\n\t        this._entityStore.clear();\n\t        return new Promise(function (resolve) {\n\t            _this.dataSource.query(function (data) {\n\t                _this.registerNewItems(data);\n\t                _this.resourcesAreAvailable = true;\n\t                resolve();\n\t            });\n\t        });\n\t    };\n\t    DataService.prototype.update = function (data) {\n\t        var resourceClass;\n\t        resourceClass = this.dataSource;\n\t        resourceClass.update({}, data);\n\t    };\n\t    DataService.prototype.createItem = function (data) {\n\t        var _this = this;\n\t        return new Promise(function (resolve, reject) {\n\t            _this.dataSource.save(data).$promise.then(function (obj) {\n\t                _this.dataSource.get({ id: obj.id }, function (item) {\n\t                    item = _this.registerNewItem(item);\n\t                    resolve(item);\n\t                });\n\t            }).catch(function (err) {\n\t                reject(err);\n\t            });\n\t        });\n\t    };\n\t    DataService.prototype.find = function (id) {\n\t        return this._entityStore.findItem(id);\n\t    };\n\t    DataService.prototype.getDisplayName = function (item, defaultValue) {\n\t        if (defaultValue === void 0) { defaultValue = \"\"; }\n\t        if (\"name\" in item)\n\t            return item[\"name\"];\n\t        return defaultValue;\n\t    };\n\t    DataService.prototype.getDisplayNameForId = function (id, defaultValue) {\n\t        if (defaultValue === void 0) { defaultValue = \"\"; }\n\t        var item = this.find(id);\n\t        return item == null ? defaultValue : this.getDisplayName(item);\n\t    };\n\t    DataService.prototype.createCustomResourceMethods = function () {\n\t        return {};\n\t    };\n\t    Object.defineProperty(DataService.prototype, \"apiUrl\", {\n\t        get: function () {\n\t            return this.apiLocation;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    DataService.prototype.mapQueriedItem = function (obj) {\n\t        obj.createdAt = new Date(obj.createdAt);\n\t        obj.updatedAt = new Date(obj.updatedAt);\n\t        return obj;\n\t    };\n\t    DataService.prototype.registerNewItem = function (obj) {\n\t        var item = this.mapQueriedItem(obj);\n\t        this._entityStore.addItem(item);\n\t        return item;\n\t    };\n\t    DataService.prototype.registerNewItems = function (items) {\n\t        var _this = this;\n\t        items = items.map(function (obj) {\n\t            return _this.registerNewItem(obj);\n\t        });\n\t        return items;\n\t    };\n\t    DataService.prototype.where = function (fcn) {\n\t        var items = this.whereAll(fcn);\n\t        return items.length > 0 ? items[0] : null;\n\t    };\n\t    DataService.prototype.whereAll = function (fcn) {\n\t        return this._entityStore.where(fcn);\n\t    };\n\t    DataService.prototype.createResource = function (location) {\n\t        var obj = this.createCustomResourceMethods();\n\t        obj.update = { method: \"PUT\", url: location + \"brainareas\" };\n\t        this.dataSource = this.$resource(location + this.resourcePath() + \"/:id\", { id: \"@id\" }, obj);\n\t    };\n\t    DataService.$inject = [\n\t        \"$resource\"\n\t    ];\n\t    return DataService;\n\t}());\n\texports.DataService = DataService;\n\tvar NumberedItemDataService = (function (_super) {\n\t    __extends(NumberedItemDataService, _super);\n\t    function NumberedItemDataService() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    NumberedItemDataService.prototype.findWithIdNumber = function (id) {\n\t        var item = this.where(function (obj) {\n\t            return obj.idNumber === id;\n\t        });\n\t        return item;\n\t    };\n\t    return NumberedItemDataService;\n\t}(DataService));\n\texports.NumberedItemDataService = NumberedItemDataService;\n\tvar NamedItemDataService = (function (_super) {\n\t    __extends(NamedItemDataService, _super);\n\t    function NamedItemDataService() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    NamedItemDataService.prototype.findWithName = function (name) {\n\t        var item = this.where(function (obj) {\n\t            return obj.name.toLowerCase() === name.toLowerCase();\n\t        });\n\t        return item;\n\t    };\n\t    return NamedItemDataService;\n\t}(DataService));\n\texports.NamedItemDataService = NamedItemDataService;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar EntityStore = (function () {\n\t    function EntityStore(idKey) {\n\t        if (idKey === void 0) { idKey = \"id\"; }\n\t        this._store = {};\n\t        this._array = [];\n\t        this._idKey = idKey;\n\t    }\n\t    EntityStore.prototype.clear = function () {\n\t        var _this = this;\n\t        this._array.length = 0;\n\t        Object.keys(this._store).forEach(function (key) {\n\t            delete _this._store[key];\n\t        });\n\t    };\n\t    EntityStore.prototype.findItem = function (key) {\n\t        if (key == null || key.length === 0) {\n\t            return null;\n\t        }\n\t        return this._store[key];\n\t    };\n\t    EntityStore.prototype.addItem = function (item) {\n\t        if (this.findObject(item) == null) {\n\t            this.insertItem(item);\n\t        }\n\t    };\n\t    EntityStore.prototype.addItems = function (items) {\n\t        var _this = this;\n\t        items.forEach(function (item) {\n\t            _this.addItem(item);\n\t        });\n\t    };\n\t    EntityStore.prototype.removeItem = function (item) {\n\t        var obj = this.findObject(item);\n\t        if (obj != null) {\n\t            this.deleteItem(obj);\n\t        }\n\t        return obj;\n\t    };\n\t    EntityStore.prototype.removeItems = function (items) {\n\t        var _this = this;\n\t        return items.map(function (item) {\n\t            return _this.removeItem(item);\n\t        });\n\t    };\n\t    EntityStore.prototype.where = function (fcn) {\n\t        return this._array.filter(function (item) {\n\t            return fcn(item);\n\t        });\n\t    };\n\t    Object.defineProperty(EntityStore.prototype, \"items\", {\n\t        get: function () {\n\t            return this._array;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    EntityStore.prototype.findObject = function (item) {\n\t        return this.findItem(this.getKey(item));\n\t    };\n\t    EntityStore.prototype.getKey = function (item) {\n\t        if (item == null) {\n\t            return null;\n\t        }\n\t        return item[this._idKey];\n\t    };\n\t    EntityStore.prototype.insertItem = function (item) {\n\t        this._array.push(item);\n\t        this._store[item[this._idKey]] = item;\n\t    };\n\t    EntityStore.prototype.deleteItem = function (item) {\n\t        if (item == null) {\n\t            return;\n\t        }\n\t        var key = item[this._idKey];\n\t        if (key == null) {\n\t            return;\n\t        }\n\t        var index = this._array.indexOf(item);\n\t        if (index > -1) {\n\t            this._array.splice(index, 1);\n\t        }\n\t        if (key in this._store) {\n\t            delete this._store[key];\n\t        }\n\t    };\n\t    return EntityStore;\n\t}());\n\texports.EntityStore = EntityStore;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar dataService_1 = __webpack_require__(1);\n\tvar BrainAreaDepthEntry = (function () {\n\t    function BrainAreaDepthEntry() {\n\t    }\n\t    return BrainAreaDepthEntry;\n\t}());\n\texports.BrainAreaDepthEntry = BrainAreaDepthEntry;\n\tvar BrainAreaService = (function (_super) {\n\t    __extends(BrainAreaService, _super);\n\t    function BrainAreaService($resource) {\n\t        _super.call(this, $resource);\n\t    }\n\t    Object.defineProperty(BrainAreaService.prototype, \"service\", {\n\t        get: function () {\n\t            return this.dataSource;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    BrainAreaService.prototype.mapQueriedItem = function (obj) {\n\t        obj.createdAt = new Date(obj.createdAt);\n\t        obj.updatedAt = new Date(obj.updatedAt);\n\t        return obj;\n\t    };\n\t    BrainAreaService.prototype.resourcePath = function () {\n\t        return \"brainareas\";\n\t    };\n\t    BrainAreaService.prototype.createCustomResourceMethods = function () {\n\t        return {\n\t            queryForDepth: {\n\t                method: \"GET\",\n\t                url: this.apiUrl + \"brainareas/depth/:depth\",\n\t                params: { depth: \"@depth\" },\n\t                isArray: true\n\t            },\n\t            queryForParent: {\n\t                method: \"GET\",\n\t                url: this.apiUrl + \"brainareas/parent/:parentId\",\n\t                params: { parentId: \"@parentId\" },\n\t                isArray: true\n\t            }\n\t        };\n\t    };\n\t    BrainAreaService.prototype.brainAreasForDepth = function (depth) {\n\t        var _this = this;\n\t        return new Promise(function (resolve, reject) {\n\t            _this.service.queryForDepth({ depth: depth }).$promise.then(function (data) {\n\t                data = _this.registerNewItems(data);\n\t                resolve(data);\n\t            }).catch(function (err) {\n\t                reject(err);\n\t            });\n\t        });\n\t    };\n\t    BrainAreaService.prototype.brainAreasForParent = function (parentId) {\n\t        var _this = this;\n\t        return new Promise(function (resolve, reject) {\n\t            _this.service.queryForParent({ parentId: parentId }).$promise.then(function (data) {\n\t                data = _this.registerNewItems(data);\n\t                resolve(data);\n\t            }).catch(function (err) {\n\t                reject(err);\n\t            });\n\t        });\n\t    };\n\t    BrainAreaService.$inject = [\n\t        \"$resource\"\n\t    ];\n\t    return BrainAreaService;\n\t}(dataService_1.NamedItemDataService));\n\texports.BrainAreaService = BrainAreaService;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar dataService_1 = __webpack_require__(1);\n\tvar FluorophoreService = (function (_super) {\n\t    __extends(FluorophoreService, _super);\n\t    function FluorophoreService($resource) {\n\t        _super.call(this, $resource);\n\t    }\n\t    FluorophoreService.prototype.resourcePath = function () {\n\t        return \"fluorophores\";\n\t    };\n\t    Object.defineProperty(FluorophoreService.prototype, \"fluorophores\", {\n\t        get: function () {\n\t            return this._entityStore.items;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    FluorophoreService.$inject = [\n\t        \"$resource\"\n\t    ];\n\t    return FluorophoreService;\n\t}(dataService_1.NamedItemDataService));\n\texports.FluorophoreService = FluorophoreService;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar dataService_1 = __webpack_require__(1);\n\tvar InjectionService = (function (_super) {\n\t    __extends(InjectionService, _super);\n\t    function InjectionService($resource, injectionVirusService, brainAreaService) {\n\t        _super.call(this, $resource);\n\t        this.injectionVirusService = injectionVirusService;\n\t        this.brainAreaService = brainAreaService;\n\t        this.injectionSampleMap = {};\n\t    }\n\t    InjectionService.prototype.resourcePath = function () {\n\t        return \"injections\";\n\t    };\n\t    InjectionService.prototype.createCustomResourceMethods = function () {\n\t        return {\n\t            injectionsForSample: {\n\t                method: \"GET\",\n\t                url: this.apiUrl + \"injections/sample/:id/\",\n\t                params: { id: \"@id\" },\n\t                isArray: true\n\t            }\n\t        };\n\t    };\n\t    InjectionService.prototype.registerNewItem = function (obj) {\n\t        var item = _super.prototype.registerNewItem.call(this, obj);\n\t        var list = this.injectionSampleMap[item.sampleId];\n\t        if (list === undefined || list === null) {\n\t            list = [];\n\t            this.injectionSampleMap[item.sampleId] = list;\n\t        }\n\t        var matching = list.map(function (obj, index) { return obj.id === item.sampleId ? index : -1; }).filter(function (index) { return index > -1; });\n\t        var index = matching.length > 0 ? matching[0] : -1;\n\t        if (index < 0) {\n\t            list.push(item);\n\t        }\n\t        else {\n\t            list[index] = item;\n\t        }\n\t        return item;\n\t    };\n\t    InjectionService.prototype.injectionsForSample = function (sampleId) {\n\t        var injections = this.injectionSampleMap[sampleId];\n\t        if (injections === undefined || injections === null) {\n\t            injections = [];\n\t            this.injectionSampleMap[sampleId] = injections;\n\t        }\n\t        return injections;\n\t    };\n\t    Object.defineProperty(InjectionService.prototype, \"injections\", {\n\t        get: function () {\n\t            return this._entityStore.items;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    InjectionService.prototype.getDisplayName = function (item, defaultValue) {\n\t        if (defaultValue === void 0) { defaultValue = \"\"; }\n\t        return \"(\" + this.brainAreaService.getDisplayNameForId(item.brainAreaId) + \":\" + this.injectionVirusService.getDisplayNameForId(item.injectionVirusId) + \")\";\n\t    };\n\t    InjectionService.$inject = [\n\t        \"$resource\",\n\t        \"injectionVirusService\",\n\t        \"brainAreaService\"\n\t    ];\n\t    return InjectionService;\n\t}(dataService_1.DataService));\n\texports.InjectionService = InjectionService;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar dataService_1 = __webpack_require__(1);\n\tvar InjectionVirusService = (function (_super) {\n\t    __extends(InjectionVirusService, _super);\n\t    function InjectionVirusService($resource) {\n\t        _super.call(this, $resource);\n\t    }\n\t    InjectionVirusService.prototype.resourcePath = function () {\n\t        return \"viruses\";\n\t    };\n\t    Object.defineProperty(InjectionVirusService.prototype, \"injectionViruses\", {\n\t        get: function () {\n\t            return this._entityStore.items;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    InjectionVirusService.$inject = [\n\t        \"$resource\"\n\t    ];\n\t    return InjectionVirusService;\n\t}(dataService_1.NamedItemDataService));\n\texports.InjectionVirusService = InjectionVirusService;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar dataService_1 = __webpack_require__(1);\n\tvar MouseStrainService = (function (_super) {\n\t    __extends(MouseStrainService, _super);\n\t    function MouseStrainService($resource) {\n\t        _super.call(this, $resource);\n\t    }\n\t    MouseStrainService.prototype.resourcePath = function () {\n\t        return \"mousestrains\";\n\t    };\n\t    Object.defineProperty(MouseStrainService.prototype, \"mouseStrains\", {\n\t        get: function () {\n\t            return this._entityStore.items;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    MouseStrainService.$inject = [\n\t        \"$resource\"\n\t    ];\n\t    return MouseStrainService;\n\t}(dataService_1.NamedItemDataService));\n\texports.MouseStrainService = MouseStrainService;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar dataService_1 = __webpack_require__(1);\n\tvar NeuronService = (function (_super) {\n\t    __extends(NeuronService, _super);\n\t    function NeuronService($resource) {\n\t        _super.call(this, $resource);\n\t        this.neuronInjectionMap = {};\n\t    }\n\t    NeuronService.prototype.registerNewItem = function (rawObj) {\n\t        var item = _super.prototype.registerNewItem.call(this, rawObj);\n\t        var list = this.neuronInjectionMap[item.injectionId];\n\t        if (list === undefined || list === null) {\n\t            list = [];\n\t            this.neuronInjectionMap[item.injectionId] = list;\n\t        }\n\t        var matching = list.map(function (obj, index) { return obj.id === item.injectionId ? index : -1; }).filter(function (index) { return index > -1; });\n\t        var index = matching.length > 0 ? matching[0] : -1;\n\t        if (index < 0) {\n\t            list.push(item);\n\t        }\n\t        else {\n\t            list[index] = item;\n\t        }\n\t        return item;\n\t    };\n\t    NeuronService.prototype.resourcePath = function () {\n\t        return \"neurons\";\n\t    };\n\t    NeuronService.prototype.neuronsForInjection = function (injectionId) {\n\t        var neurons = this.neuronInjectionMap[injectionId];\n\t        if (neurons === undefined || neurons === null) {\n\t            neurons = [];\n\t            this.neuronInjectionMap[injectionId] = neurons;\n\t        }\n\t        return neurons;\n\t    };\n\t    Object.defineProperty(NeuronService.prototype, \"neurons\", {\n\t        get: function () {\n\t            return this._entityStore.items;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    NeuronService.prototype.getDisplayName = function (item, defaultValue) {\n\t        if (defaultValue === void 0) { defaultValue = \"\"; }\n\t        if (item === null) {\n\t            return \"\";\n\t        }\n\t        if (item.tag.length > 0) {\n\t            return item.idNumber.toString() + \" \" + item.tag;\n\t        }\n\t        else {\n\t            return item.idNumber.toString();\n\t        }\n\t    };\n\t    NeuronService.$inject = [\n\t        \"$resource\"\n\t    ];\n\t    return NeuronService;\n\t}(dataService_1.NumberedItemDataService));\n\texports.NeuronService = NeuronService;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar dataService_1 = __webpack_require__(1);\n\tvar RegistrationTransformService = (function (_super) {\n\t    __extends(RegistrationTransformService, _super);\n\t    function RegistrationTransformService($resource) {\n\t        _super.call(this, $resource);\n\t    }\n\t    RegistrationTransformService.prototype.resourcePath = function () {\n\t        return \"registrationtransforms\";\n\t    };\n\t    Object.defineProperty(RegistrationTransformService.prototype, \"transforms\", {\n\t        get: function () {\n\t            return this._entityStore.items;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    RegistrationTransformService.$inject = [\n\t        \"$resource\"\n\t    ];\n\t    return RegistrationTransformService;\n\t}(dataService_1.NamedItemDataService));\n\texports.RegistrationTransformService = RegistrationTransformService;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar dataService_1 = __webpack_require__(1);\n\tvar SampleService = (function (_super) {\n\t    __extends(SampleService, _super);\n\t    function SampleService($resource) {\n\t        _super.call(this, $resource);\n\t    }\n\t    SampleService.prototype.mapQueriedItem = function (obj) {\n\t        obj = _super.prototype.mapQueriedItem.call(this, obj);\n\t        obj.sampleDate = new Date(obj.sampleDate);\n\t        return obj;\n\t    };\n\t    SampleService.prototype.resourcePath = function () {\n\t        return \"samples\";\n\t    };\n\t    Object.defineProperty(SampleService.prototype, \"samples\", {\n\t        get: function () {\n\t            return this._entityStore.items;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    SampleService.prototype.getDisplayName = function (item, defaultValue) {\n\t        if (defaultValue === void 0) { defaultValue = \"\"; }\n\t        if (item === null || item.sampleDate === null) {\n\t            return \"\";\n\t        }\n\t        var date = item.sampleDate.getFullYear() + \"-\" + lpad(item.sampleDate.getMonth() + 1, 2) + \"-\" + lpad(item.sampleDate.getDate(), 2);\n\t        if (item.tag.length > 0) {\n\t            return item.idNumber.toString() + \" \" + item.tag + \" (\" + date + \")\";\n\t        }\n\t        else {\n\t            return item.idNumber.toString() + \" (\" + date + \")\";\n\t        }\n\t    };\n\t    SampleService.$inject = [\n\t        \"$resource\"\n\t    ];\n\t    return SampleService;\n\t}(dataService_1.NumberedItemDataService));\n\texports.SampleService = SampleService;\n\tfunction lpad(n, width, z) {\n\t    if (z === void 0) { z = \"0\"; }\n\t    var str = n + \"\";\n\t    return str.length >= width ? str : new Array(width - str.length + 1).join(z) + str;\n\t}\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar dataService_1 = __webpack_require__(1);\n\tvar StructureIdentifierService = (function (_super) {\n\t    __extends(StructureIdentifierService, _super);\n\t    function StructureIdentifierService($resource) {\n\t        _super.call(this, $resource);\n\t    }\n\t    StructureIdentifierService.prototype.resourcePath = function () {\n\t        return \"structures\";\n\t    };\n\t    Object.defineProperty(StructureIdentifierService.prototype, \"structures\", {\n\t        get: function () {\n\t            return this._entityStore.items;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    StructureIdentifierService.$inject = [\n\t        \"$resource\"\n\t    ];\n\t    return StructureIdentifierService;\n\t}(dataService_1.NamedItemDataService));\n\texports.StructureIdentifierService = StructureIdentifierService;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar dataService_1 = __webpack_require__(1);\n\tvar TracingNodeService = (function (_super) {\n\t    __extends(TracingNodeService, _super);\n\t    function TracingNodeService($resource) {\n\t        _super.call(this, $resource);\n\t    }\n\t    Object.defineProperty(TracingNodeService.prototype, \"service\", {\n\t        get: function () {\n\t            return this.dataSource;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    TracingNodeService.prototype.resourcePath = function () {\n\t        return \"nodes\";\n\t    };\n\t    TracingNodeService.prototype.createCustomResourceMethods = function () {\n\t        return {\n\t            nodesForStructure: {\n\t                method: \"GET\",\n\t                url: this.apiUrl + \"nodes/findByStructure/:id/\",\n\t                params: { id: \"@id\" },\n\t                isArray: true\n\t            }\n\t        };\n\t    };\n\t    Object.defineProperty(TracingNodeService.prototype, \"nodes\", {\n\t        get: function () {\n\t            return this._entityStore.items;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    TracingNodeService.prototype.nodesForStructure = function (structureId) {\n\t        var _this = this;\n\t        return new Promise(function (resolve, reject) {\n\t            _this.service.nodesForStructure({ id: structureId }).$promise.then(function (data) {\n\t                resolve(data);\n\t            }).catch(function (err) {\n\t                reject(err);\n\t            });\n\t        });\n\t    };\n\t    TracingNodeService.$inject = [\n\t        \"$resource\"\n\t    ];\n\t    return TracingNodeService;\n\t}(dataService_1.DataService));\n\texports.TracingNodeService = TracingNodeService;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar ng = __webpack_require__(14);\n\tvar dataService_1 = __webpack_require__(1);\n\tvar TracingService = (function (_super) {\n\t    __extends(TracingService, _super);\n\t    function TracingService($resource, $http) {\n\t        _super.call(this, $resource);\n\t        this.$http = $http;\n\t    }\n\t    Object.defineProperty(TracingService.prototype, \"service\", {\n\t        get: function () {\n\t            return this.dataSource;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    TracingService.prototype.resourcePath = function () {\n\t        return \"tracings\";\n\t    };\n\t    TracingService.prototype.createCustomResourceMethods = function () {\n\t        return {\n\t            nodes: {\n\t                method: \"GET\",\n\t                url: location + \"tracings/:id/nodes/\",\n\t                params: { id: \"@id\" },\n\t                isArray: true\n\t            }\n\t        };\n\t    };\n\t    Object.defineProperty(TracingService.prototype, \"tracings\", {\n\t        get: function () {\n\t            return this._entityStore.items;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    TracingService.prototype.uploadSwcFile = function (theFile, tracingInfo) {\n\t        var _this = this;\n\t        return new Promise(function (resolve, reject) {\n\t            var url = _this.apiUrl + \"upload\";\n\t            var fd = new FormData();\n\t            fd.append(\"contents\", theFile);\n\t            _this.$http.post(url, fd, {\n\t                params: tracingInfo,\n\t                transformRequest: ng.identity,\n\t                headers: { \"Content-Type\": undefined }\n\t            }).then(function (result) {\n\t                _this.dataSource.get({ id: result.data.id }, function (fullItem) {\n\t                    _this._entityStore.addItem(fullItem);\n\t                    resolve(fullItem);\n\t                });\n\t            }).catch(function (error) {\n\t                console.log(error);\n\t                reject(error);\n\t            });\n\t        });\n\t    };\n\t    TracingService.$inject = [\n\t        \"$resource\",\n\t        \"$http\"\n\t    ];\n\t    return TracingService;\n\t}(dataService_1.DataService));\n\texports.TracingService = TracingService;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** ndb-client.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap aaf3b874c9c2574fa230\n **/","import ng = require(\"angular\");\n\nimport {IEntityStore, EntityStore, WhereFunction} from \"./entityStore\";\n\nexport interface IApiItem {\n    id: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\n\nexport interface IApiIdNumberItem extends IApiItem {\n    idNumber: number;\n}\n\nexport interface IApiNamedItem extends IApiItem {\n    name: string;\n}\n\nexport interface IMyResourceClass<T extends IApiItem> extends ng.resource.IResourceClass<ng.resource.IResource<T>> {\n    update(obj: any, data: T): void;\n}\n\nexport abstract class DataService<T extends IApiItem> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    protected _entityStore: IEntityStore<T> = new EntityStore<T>();\n\n    public resourcesAreAvailable: boolean = false;\n\n    private apiLocation: string = \"\";\n\n    protected dataSource: ng.resource.IResourceClass<ng.resource.IResource<T>>;\n\n    constructor(protected $resource: ng.resource.IResourceService) {\n    }\n\n    public setLocation(resourceLocation: string): Promise<void> {\n        this.resourcesAreAvailable = false;\n\n        this.apiLocation = resourceLocation;\n\n        this.createResource(this.apiLocation);\n\n        return this.refreshData();\n    }\n\n    public refreshData(): Promise<void> {\n        this.resourcesAreAvailable = false;\n\n        this._entityStore.clear();\n\n        return new Promise<void>((resolve) => {\n            this.dataSource.query((data: any) => {\n\n                this.registerNewItems(data);\n\n                this.resourcesAreAvailable = true;\n\n                resolve();\n            });\n        });\n    }\n\n    public update(data: T) {\n        let resourceClass: IMyResourceClass<T>;\n\n        resourceClass = <IMyResourceClass<T>>this.dataSource;\n\n        resourceClass.update({}, data);\n    }\n\n    public createItem(data: any): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            this.dataSource.save(data).$promise.then((obj: T) => {\n                this.dataSource.get({id: obj.id}, (item: any) => {\n                    item = this.registerNewItem(item);\n                    resolve(item);\n                });\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    }\n\n    public find(id: string): T {\n        return this._entityStore.findItem(id);\n    }\n\n    public getDisplayName(item: T, defaultValue: string = \"\"): string {\n        if (\"name\" in item)\n            return (<any>item)[\"name\"];\n\n        return defaultValue;\n    }\n\n    public getDisplayNameForId(id: string, defaultValue: string = \"\"): string {\n        let item: T = this.find(id);\n\n        return item == null ? defaultValue : this.getDisplayName(item);\n    }\n\n    // Concrete class entry points\n\n    protected abstract resourcePath(): string; // Required\n\n    protected createCustomResourceMethods(): any {\n        return {};\n    }\n\n    protected get apiUrl() {\n        return this.apiLocation;\n    }\n\n    protected mapQueriedItem(obj: any): T {\n        obj.createdAt = new Date(<string>obj.createdAt);\n        obj.updatedAt = new Date(<string>obj.updatedAt);\n\n        return obj;\n    }\n\n    protected registerNewItem(obj: any): T {\n        let item: T = this.mapQueriedItem(obj);\n\n        this._entityStore.addItem(item);\n\n        return item;\n    }\n\n    protected registerNewItems(items: any) {\n        items = items.map((obj: IApiItem) => {\n            return this.registerNewItem(obj);\n        });\n\n        return items;\n    }\n\n    protected where(fcn: WhereFunction<T>): T {\n        let items: Array<T> = this.whereAll(fcn);\n\n        return items.length > 0 ? items[0] : null;\n    }\n\n    protected whereAll(fcn: WhereFunction<T>): Array<T> {\n        return this._entityStore.where(fcn);\n    }\n\n    // Internal\n\n    private createResource(location: string) {\n        let obj: any = this.createCustomResourceMethods();\n\n        obj.update = {method: \"PUT\", url: location + \"brainareas\"};\n\n        this.dataSource = this.$resource(location + this.resourcePath() + \"/:id\", {id: \"@id\"}, obj);\n    }\n}\n\nexport abstract class NumberedItemDataService<T extends IApiIdNumberItem> extends DataService<T> {\n\n    public findWithIdNumber(id: number): T {\n        let item: any = this.where((obj: IApiIdNumberItem) => {\n            return obj.idNumber === id;\n        });\n\n        return <T>item;\n    }\n}\n\nexport abstract class NamedItemDataService<T extends IApiNamedItem> extends DataService<T> {\n\n    public findWithName(name: string): T {\n        let item: any = this.where((obj: IApiNamedItem) => {\n            return obj.name.toLowerCase() === name.toLowerCase();\n        });\n\n        return <T>item;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/dataService.ts\n **/","export interface WhereFunction<T> {\n    (obj: T): boolean;\n}\n\nexport interface IEntityStore<T> {\n    clear(): void;\n    findItem(key: string): T;\n    addItem(item: T): void;\n    addItems(items: Array<T>): void;\n    removeItem(item: T): void;\n    removeItems(items: Array<T>): Array<T>;\n    where(fcn: WhereFunction<T>): Array<T>;\n    items: Array<T>;\n}\n\nexport class EntityStore<T> implements IEntityStore<T> {\n    private _store: any = {};\n    private _array: Array<T> = [];\n    private _idKey: string;\n\n    constructor(idKey: string = \"id\") {\n        this._idKey = idKey;\n    }\n\n    public clear(): void {\n        this._array.length = 0;\n\n        Object.keys(this._store).forEach((key) => {\n            delete this._store[key];\n        });\n    }\n\n    public findItem(key: string): T {\n        if (key == null || key.length === 0) {\n            return null;\n        }\n\n        return this._store[key];\n    }\n\n    public addItem(item: T): void {\n        if (this.findObject(item) == null) {\n            this.insertItem(item);\n        }\n    }\n\n    public addItems(items: Array<T>): void {\n        items.forEach((item) => {\n            this.addItem(item);\n        });\n    }\n\n    public removeItem(item: T): T {\n        let obj = this.findObject(item);\n\n        if (obj != null) {\n            this.deleteItem(obj);\n        }\n\n        return obj;\n    }\n\n    public removeItems(items: Array<T>): Array<T> {\n        return items.map((item) => {\n            return this.removeItem(item);\n        });\n    }\n\n    public where(fcn: WhereFunction<T>): Array<T> {\n        return this._array.filter((item) => {\n            return fcn(item);\n        });\n    }\n\n    public get items(): Array<T> {\n        return this._array;\n    }\n\n    // Internal\n\n    private findObject(item: T) {\n        return this.findItem(this.getKey(item));\n    }\n\n    private getKey(item: T): string {\n        if (item == null) {\n            return null;\n        }\n\n        return (<any>item)[this._idKey];\n    }\n\n    private insertItem(item: T): void {\n        this._array.push(item);\n\n        this._store[(<any>item)[this._idKey]] = item;\n    }\n\n    private deleteItem(item: T): void {\n        if (item == null) {\n            return;\n        }\n\n        let key = (<any>item)[this._idKey];\n\n        if (key == null) {\n            return;\n        }\n\n        let index = this._array.indexOf(item);\n\n        if (index > -1) {\n            this._array.splice(index, 1);\n        }\n\n        if (key in this._store) {\n            delete this._store[key];\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/entityStore.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiNamedItem, NamedItemDataService} from \"./dataService\";\n\nexport interface IBrainArea extends IApiNamedItem {\n    structureId: number;\n    depth: number;\n    parentStructureId: number;\n    structureIdPath: string;\n    safeName: string;\n    acronym: string;\n}\n\nexport interface IBrainAreaResource extends ng.resource.IResourceClass<ng.resource.IResource<IBrainArea>> {\n    queryForDepth(obj: any): any;\n    queryForParent(obj: any): any;\n}\n\nexport class BrainAreaDepthEntry {\n    depth: number;\n    areas: Array<IBrainArea>;\n    selectedAreaIndex: number;\n}\n\nexport class BrainAreaService extends NamedItemDataService<IBrainArea> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    private get service(): IBrainAreaResource {\n        return <IBrainAreaResource>this.dataSource;\n    }\n\n    protected mapQueriedItem(obj: any): IBrainArea {\n        obj.createdAt = new Date(<string>obj.createdAt);\n        obj.updatedAt = new Date(<string>obj.updatedAt);\n\n        return obj;\n    }\n\n    protected resourcePath(): string {\n        return \"brainareas\";\n    }\n\n    protected createCustomResourceMethods(): any {\n        return {\n            queryForDepth: {\n                method: \"GET\",\n                url: this.apiUrl + \"brainareas/depth/:depth\",\n                params: {depth: \"@depth\"},\n                isArray: true\n            },\n            queryForParent: {\n                method: \"GET\",\n                url: this.apiUrl + \"brainareas/parent/:parentId\",\n                params: {parentId: \"@parentId\"},\n                isArray: true\n            }\n        };\n    }\n\n    public brainAreasForDepth(depth: number): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            this.service.queryForDepth({depth: depth}).$promise.then((data: any) => {\n                data = this.registerNewItems(data);\n                resolve(data);\n            }).catch((err: any) => {\n                reject(err);\n            });\n        });\n    }\n\n    public brainAreasForParent(parentId: number): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            this.service.queryForParent({parentId: parentId}).$promise.then((data: any) => {\n                data = this.registerNewItems(data);\n                resolve(data);\n            }).catch((err: any) => {\n                reject(err);\n            });\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/brainAreaService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiNamedItem, NamedItemDataService} from \"./dataService\";\n\nexport interface IFluorophore extends IApiNamedItem {\n}\n\nexport class FluorophoreService extends NamedItemDataService<IFluorophore> {\n\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    protected resourcePath(): string {\n        return \"fluorophores\";\n    }\n\n    public get fluorophores(): Array<IFluorophore> {\n        return this._entityStore.items;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/fluorophoreService.ts\n **/","import {IApiItem, DataService} from \"./dataService\";\nimport ng = require(\"angular\");\n\nimport {BrainAreaService} from \"./brainAreaService\";\nimport {InjectionVirusService} from \"./injectionVirusService\";\n\nexport interface IInjection extends IApiItem {\n    sampleId: string;\n    brainAreaId: string;\n    injectionVirusId: string;\n    fluorophoreId: string;\n}\n\nexport interface IInjectionResource extends ng.resource.IResourceClass<ng.resource.IResource<IInjection>> {\n    injectionsForSample(obj: any): Array<string>;\n}\n\ninterface IInjectionSampleMap {\n    [key: string]: Array<IInjection>;\n}\n\nexport class InjectionService extends DataService<IInjection> {\n\n    public static $inject = [\n        \"$resource\",\n        \"injectionVirusService\",\n        \"brainAreaService\"\n    ];\n\n    private injectionSampleMap: IInjectionSampleMap = {};\n\n    constructor($resource: ng.resource.IResourceService, private injectionVirusService: InjectionVirusService, private brainAreaService: BrainAreaService) {\n        super($resource);\n    }\n\n    protected resourcePath(): string {\n        return \"injections\";\n    }\n\n    protected createCustomResourceMethods(): any {\n        return {\n            injectionsForSample: {\n                method: \"GET\",\n                url: this.apiUrl + \"injections/sample/:id/\",\n                params: {id: \"@id\"},\n                isArray: true\n            }\n        };\n    }\n\n    protected registerNewItem(obj: IInjection): IInjection {\n        let item: IInjection = super.registerNewItem(obj) as IInjection;\n\n        let list: Array<IInjection> = this.injectionSampleMap[item.sampleId];\n\n        if (list === undefined || list === null) {\n            list = [];\n            this.injectionSampleMap[item.sampleId] = list;\n        }\n\n        // Find index of item in list, if present.\n        let matching: Array<number> = list.map((obj, index) => obj.id === item.sampleId ? index : -1).filter(index => index > -1);\n\n        let index: number =  matching.length > 0 ? matching[0] : -1; // list.indexOf(item.sampleId);\n\n        // Add or update.\n        if (index < 0) {\n            list.push(item);\n        } else {\n            list[index] = item;\n        }\n\n        return item;\n    }\n\n    public injectionsForSample(sampleId: string): Array<IInjection> {\n        let injections = this.injectionSampleMap[sampleId];\n\n        if (injections === undefined || injections === null) {\n            injections = [];\n            this.injectionSampleMap[sampleId] = injections;\n        }\n\n        return injections;\n    }\n\n\n    public get injections(): Array<IInjection> {\n        return this._entityStore.items;\n    }\n\n    public getDisplayName(item: IInjection, defaultValue: string = \"\"): string {\n        return \"(\" + this.brainAreaService.getDisplayNameForId(item.brainAreaId) + \":\" + this.injectionVirusService.getDisplayNameForId(item.injectionVirusId) + \")\";\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/injectionService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiNamedItem, NamedItemDataService} from \"./dataService\";\n\nexport interface IInjectionVirus extends IApiNamedItem {\n}\n\nexport class InjectionVirusService extends NamedItemDataService<IInjectionVirus> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    protected resourcePath(): string {\n        return \"viruses\";\n    }\n\n    public get injectionViruses(): Array<IInjectionVirus> {\n        return this._entityStore.items;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/injectionVirusService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiNamedItem, NamedItemDataService} from \"./dataService\";\n\nexport interface IMouseStrain extends IApiNamedItem {\n}\n\nexport class MouseStrainService extends NamedItemDataService<IMouseStrain> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    protected resourcePath(): string {\n        return \"mousestrains\";\n    }\n\n    public get mouseStrains(): Array<IMouseStrain> {\n        return this._entityStore.items;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/mouseStrainService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiIdNumberItem, NumberedItemDataService} from \"./dataService\";\nimport {IInjection} from \"./injectionService\";\n\nexport interface INeuron extends IApiIdNumberItem {\n    injectionId: string;\n    brainAreaId: string;\n    tag: string;\n    keywords: string;\n    x: number;\n    y: number;\n    z: number;\n}\n\ninterface INeuronSampleMap {\n    [key: string]: Array<INeuron>;\n}\n\nexport class NeuronService extends NumberedItemDataService<INeuron> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    // Arrays of neuron objects keyed by injection id.\n    private neuronInjectionMap: INeuronSampleMap = {};\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    protected registerNewItem(rawObj: INeuron): INeuron {\n        let item: INeuron = super.registerNewItem(rawObj) as INeuron;\n\n        let list = this.neuronInjectionMap[item.injectionId];\n\n        if (list === undefined || list === null) {\n            list = [];\n            this.neuronInjectionMap[item.injectionId] = list;\n        }\n\n        // Find index of item in list, if present.\n        let matching: Array<number> = list.map((obj, index) => obj.id === item.injectionId ? index : -1).filter(index => index > -1);\n\n        let index: number =  matching.length > 0 ? matching[0] : -1; // list.indexOf(item.injectionId);\n\n        // Add or update\n        if (index < 0) {\n            list.push(item);\n        } else {\n            list[index] = item;\n        }\n\n        return item;\n    }\n\n    protected resourcePath(): string {\n        return \"neurons\";\n    }\n\n    public neuronsForInjection(injectionId: string): Array<INeuron> {\n        let neurons: Array<INeuron> = this.neuronInjectionMap[injectionId];\n\n        if (neurons === undefined || neurons === null) {\n            neurons = [];\n            this.neuronInjectionMap[injectionId] = neurons;\n        }\n\n        return neurons;\n    }\n\n    public get neurons(): Array<INeuron> {\n        return this._entityStore.items;\n    }\n\n    public getDisplayName(item: INeuron, defaultValue: string = \"\"): string {\n        if (item === null) {\n            return \"\";\n        }\n\n        if (item.tag.length > 0) {\n            return item.idNumber.toString() + \" \" + item.tag;\n        } else {\n            return item.idNumber.toString();\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/neuronService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiNamedItem, NamedItemDataService} from \"./dataService\";\n\nexport interface IRegistrationTransform extends IApiNamedItem {\n    location: string;\n    notes: string;\n}\n\nexport class RegistrationTransformService extends NamedItemDataService<IRegistrationTransform> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    protected resourcePath(): string {\n        return \"registrationtransforms\";\n    }\n\n    public get transforms(): Array<IRegistrationTransform> {\n        return this._entityStore.items;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/registrationTransformService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiIdNumberItem, NumberedItemDataService} from \"./dataService\";\n\nexport interface ISample extends IApiIdNumberItem {\n    sampleDate: Date;\n    tag: string;\n    comment: string;\n    mouseStrainId: string;\n    registrationTransformId: string;\n    injections: Array<string>;\n}\n\nexport class SampleService extends NumberedItemDataService<ISample> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    protected mapQueriedItem(obj: any): ISample {\n        obj = super.mapQueriedItem(obj);\n\n        obj.sampleDate = new Date(<string>obj.sampleDate);\n\n        return obj;\n    }\n\n    protected resourcePath(): string {\n        return \"samples\";\n    }\n\n    public get samples(): Array<ISample> {\n        return this._entityStore.items;\n    }\n\n    public getDisplayName(item: ISample, defaultValue: string = \"\"): string {\n        if (item === null || item.sampleDate === null) {\n            return \"\";\n        }\n\n        let date: string = item.sampleDate.getFullYear() + \"-\" + lpad(item.sampleDate.getMonth() + 1, 2) + \"-\" + lpad(item.sampleDate.getDate(), 2);\n\n        if (item.tag.length > 0) {\n            return item.idNumber.toString() + \" \" + item.tag + \" (\" + date + \")\";\n        } else {\n            return item.idNumber.toString() + \" (\" + date + \")\";\n        }\n    }\n}\n\nfunction lpad(n: number, width: number, z = \"0\"): string {\n    let str: string = n + \"\";\n    return str.length >= width ? str : new Array(width - str.length + 1).join(z) + str;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/sampleService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiNamedItem, NamedItemDataService} from \"./dataService\";\n\nexport interface IStructureIdentifier extends  IApiNamedItem {\n    value: number;\n}\n\nexport class StructureIdentifierService extends NamedItemDataService<IStructureIdentifier> {\n\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    protected resourcePath(): string {\n        return \"structures\";\n    }\n\n    public get structures(): Array<IStructureIdentifier> {\n        return this._entityStore.items;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/structureIdentifierService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiItem, DataService} from \"./dataService\";\n\nexport interface ITracingNode extends IApiItem {\n}\n\nexport interface ITracingNodeResource extends ng.resource.IResourceClass<ng.resource.IResource<ITracingNode>> {\n    nodesForStructure(obj: any): Array<ITracingNode>;\n}\n\nexport class TracingNodeService extends DataService<ITracingNode> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    private get service(): ITracingNodeResource {\n        return <ITracingNodeResource>this.dataSource;\n    }\n\n\n    protected resourcePath(): string {\n        return \"nodes\";\n    }\n\n    protected createCustomResourceMethods(): any {\n        return {\n            nodesForStructure: {\n                method: \"GET\",\n                url: this.apiUrl + \"nodes/findByStructure/:id/\",\n                params: {id: \"@id\"},\n                isArray: true\n            }\n        };\n    }\n\n    /*\n     protected createResource(location: string): ITracingNodeResource {\n     return <ITracingNodeResource>this.$resource(location + \"nodes/:id\", {id: \"@id\"}, {\n     nodesForStructure: {\n     method: \"GET\",\n     url: location + \"nodes/findByStructure/:id/\",\n     params: {id: \"@id\"},\n     isArray: true\n     }\n     });\n     }\n     */\n\n    public get nodes(): Array<ITracingNode> {\n        return this._entityStore.items;\n    }\n\n    public nodesForStructure(structureId: string): Promise<Array<ITracingNode>> {\n        return new Promise<Array<ITracingNode>>((resolve, reject) => {\n            this.service.nodesForStructure({id: structureId}).$promise.then((data) => {\n                resolve(data);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/tracingNodeService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiItem, DataService} from \"./dataService\";\n\nexport interface ITracing extends IApiItem {\n    filename: string;\n    annotator: string;\n    lengthMicrometers: number;\n    neuronId: string;\n    structureIdentifierId: string;\n}\n\nexport interface ITracingResource extends ng.resource.IResourceClass<ng.resource.IResource<ITracing>> {\n    nodes(obj: any): ITracing;\n}\n\nexport class TracingService extends DataService<ITracing> {\n    public static $inject = [\n        \"$resource\",\n        \"$http\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService, private $http: ng.IHttpService) {\n        super($resource);\n    }\n\n    private get service(): ITracingResource {\n        return <ITracingResource>this.dataSource;\n    }\n\n    protected resourcePath(): string {\n        return \"tracings\";\n    }\n\n    protected createCustomResourceMethods(): any {\n        return {\n            nodes: {\n                method: \"GET\",\n                url: location + \"tracings/:id/nodes/\",\n                params: {id: \"@id\"},\n                isArray: true\n            }\n        };\n    }\n\n    public get tracings(): Array<ITracing> {\n        return this._entityStore.items;\n    }\n\n    public uploadSwcFile(theFile: any, tracingInfo: any): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            let url = this.apiUrl + \"upload\";\n\n            let fd = new FormData();\n\n            fd.append(\"contents\", theFile);\n\n            this.$http.post<ITracing>(url, fd, {\n                params: tracingInfo,\n                transformRequest: ng.identity,\n                headers: {\"Content-Type\": undefined}\n            }).then((result) => {\n                this.dataSource.get({id: result.data.id}, (fullItem: any) => {\n                    this._entityStore.addItem(fullItem);\n                    resolve(fullItem);\n                });\n            }).catch((error) => {\n                console.log(error);\n                reject(error);\n            });\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/tracingService.ts\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 14\n ** module chunks = 0\n **/"],"sourceRoot":""}