{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 1a7ea17383e4756e464e","webpack:///./src/entityStore.ts","webpack:///./src/dataService.ts","webpack:///./src/brainAreaService.ts","webpack:///./src/fluorophoreService.ts","webpack:///./src/injectionService.ts","webpack:///./src/injectionVirusService.ts","webpack:///./src/mouseStrainService.ts","webpack:///./src/neuronService.ts","webpack:///./src/registrationTransformService.ts","webpack:///./src/sampleService.ts","webpack:///./src/structureIdentifierService.ts","webpack:///./src/tracingNodeService.ts","webpack:///./src/tracingService.ts","webpack:///external \"angular\""],"names":[],"mappings":"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","file":"ndb-client.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ndb-client\", [\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ndb-client\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"ndb-client\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_14__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1a7ea17383e4756e464e\n **/","export interface WhereFunction<T> {\n    (obj: T): boolean;\n}\n\nexport interface IEntityStore<T> {\n    clear(): void;\n    findItem(key: string): T;\n    addItem(item: T): void;\n    addItems(items: Array<T>): void;\n    removeItem(item: T): void;\n    removeItems(items: Array<T>): Array<T>;\n    where(fcn: WhereFunction<T>): Array<T>;\n    items: Array<T>;\n}\n\nexport class EntityStore<T> implements IEntityStore<T> {\n    private _store: any = {};\n    private _array: Array<T> = [];\n    private _idKey: string;\n\n    constructor(idKey: string = \"id\") {\n        this._idKey = idKey;\n    }\n\n    public clear(): void {\n        this._array.length = 0;\n\n        Object.keys(this._store).forEach((key) => {\n            delete this._store[key];\n        });\n    }\n\n    public findItem(key: string): T {\n        if (key == null || key.length === 0) {\n            return null;\n        }\n\n        return this._store[key];\n    }\n\n    public addItem(item: T): void {\n        if (this.findObject(item) == null) {\n            this.insertItem(item);\n        }\n    }\n\n    public addItems(items: Array<T>): void {\n        items.forEach((item) => {\n            this.addItem(item);\n        });\n    }\n\n    public removeItem(item: T): T {\n        let obj = this.findObject(item);\n\n        if (obj != null) {\n            this.deleteItem(obj);\n        }\n\n        return obj;\n    }\n\n    public removeItems(items: Array<T>): Array<T> {\n        return items.map((item) => {\n            return this.removeItem(item);\n        });\n    }\n\n    public where(fcn: WhereFunction<T>): Array<T> {\n        return this._array.filter((item) => {\n            return fcn(item);\n        });\n    }\n\n    public get items(): Array<T> {\n        return this._array;\n    }\n\n    // Internal\n\n    private findObject(item: T) {\n        return this.findItem(this.getKey(item));\n    }\n\n    private getKey(item: T): string {\n        if (item == null) {\n            return null;\n        }\n\n        return (<any>item)[this._idKey];\n    }\n\n    private insertItem(item: T): void {\n        this._array.push(item);\n\n        this._store[(<any>item)[this._idKey]] = item;\n    }\n\n    private deleteItem(item: T): void {\n        if (item == null) {\n            return;\n        }\n\n        let key = (<any>item)[this._idKey];\n\n        if (key == null) {\n            return;\n        }\n\n        let index = this._array.indexOf(item);\n\n        if (index > -1) {\n            this._array.splice(index, 1);\n        }\n\n        if (key in this._store) {\n            delete this._store[key];\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/entityStore.ts\n **/","import ng = require(\"angular\");\n\nimport {IEntityStore, EntityStore, WhereFunction} from \"./entityStore\";\n\nexport interface IApiItem {\n    id: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\n\nexport interface IApiIdNumberItem extends IApiItem {\n    idNumber: number;\n}\n\nexport interface IApiNamedItem extends IApiItem {\n    name: string;\n}\n\nexport interface IMyResourceClass<T extends IApiItem> extends ng.resource.IResourceClass<ng.resource.IResource<T>> {\n    update(obj: any, data: T): void;\n}\n\nexport abstract class DataService<T extends IApiItem> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    protected _entityStore: IEntityStore<T> = new EntityStore<T>();\n\n    public resourcesAreAvailable: boolean = false;\n\n    private apiLocation: string = \"\";\n\n    protected dataSource: ng.resource.IResourceClass<ng.resource.IResource<T>>;\n\n    constructor(protected $resource: ng.resource.IResourceService) {\n    }\n\n    public setLocation(resourceLocation: string): Promise<void> {\n        this.resourcesAreAvailable = false;\n\n        this.apiLocation = resourceLocation;\n\n        this.createResource(this.apiLocation);\n\n        return this.refreshData();\n    }\n\n    public refreshData(): Promise<void> {\n        this.resourcesAreAvailable = false;\n\n        this._entityStore.clear();\n\n        return new Promise<void>((resolve) => {\n            this.dataSource.query((data: any) => {\n\n                this.registerNewItems(data);\n\n                this.resourcesAreAvailable = true;\n\n                resolve();\n            });\n        });\n    }\n\n    public update(data: T) {\n        let resourceClass: IMyResourceClass<T>;\n\n        resourceClass = <IMyResourceClass<T>>this.dataSource;\n\n        resourceClass.update({}, data);\n    }\n\n    public createItem(data: any): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            this.dataSource.save(data).$promise.then((obj: T) => {\n                this.dataSource.get({id: obj.id}, (item: any) => {\n                    item = this.registerNewItem(item);\n                    resolve(item);\n                });\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    }\n\n    public find(id: string): T {\n        return this._entityStore.findItem(id);\n    }\n\n    public getDisplayName(item: T, defaultValue: string = \"\"): string {\n        if (\"name\" in item)\n            return (<any>item)[\"name\"];\n\n        return defaultValue;\n    }\n\n    public getDisplayNameForId(id: string, defaultValue: string = \"\"): string {\n        let item: T = this.find(id);\n\n        return item == null ? defaultValue : this.getDisplayName(item);\n    }\n\n    // Concrete class entry points\n\n    protected abstract resourcePath(): string; // Required\n\n    protected createCustomResourceMethods(): any {\n        return {};\n    }\n\n    protected get apiUrl() {\n        return this.apiLocation;\n    }\n\n    protected mapQueriedItem(obj: any): T {\n        obj.createdAt = new Date(<string>obj.createdAt);\n        obj.updatedAt = new Date(<string>obj.updatedAt);\n\n        return obj;\n    }\n\n    protected registerNewItem(obj: any): T {\n        let item: T = this.mapQueriedItem(obj);\n\n        this._entityStore.addItem(item);\n\n        return item;\n    }\n\n    protected registerNewItems(items: any) {\n        items = items.map((obj: IApiItem) => {\n            return this.registerNewItem(obj);\n        });\n\n        return items;\n    }\n\n    protected where(fcn: WhereFunction<T>): T {\n        let items: Array<T> = this.whereAll(fcn);\n\n        return items.length > 0 ? items[0] : null;\n    }\n\n    protected whereAll(fcn: WhereFunction<T>): Array<T> {\n        return this._entityStore.where(fcn);\n    }\n\n    // Internal\n\n    private createResource(location: string) {\n        let obj: any = this.createCustomResourceMethods();\n\n        obj.update = {method: \"PUT\", url: location + \"brainareas\"};\n\n        this.dataSource = this.$resource(location + this.resourcePath() + \"/:id\", {id: \"@id\"}, obj);\n    }\n}\n\nexport abstract class NumberedItemDataService<T extends IApiIdNumberItem> extends DataService<T> {\n\n    public findWithIdNumber(id: number): T {\n        let item: any = this.where((obj: IApiIdNumberItem) => {\n            return obj.idNumber === id;\n        });\n\n        return <T>item;\n    }\n}\n\nexport abstract class NamedItemDataService<T extends IApiNamedItem> extends DataService<T> {\n\n    public findWithName(name: string): T {\n        let item: any = this.where((obj: IApiNamedItem) => {\n            return obj.name.toLowerCase() === name.toLowerCase();\n        });\n\n        return <T>item;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/dataService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiNamedItem, NamedItemDataService} from \"./dataService\";\n\nexport interface IBrainArea extends IApiNamedItem {\n    structureId: number;\n    depth: number;\n    parentStructureId: number;\n    structureIdPath: string;\n    safeName: string;\n    acronym: string;\n}\n\nexport interface IBrainAreaResource extends ng.resource.IResourceClass<ng.resource.IResource<IBrainArea>> {\n    queryForDepth(obj: any): any;\n    queryForParent(obj: any): any;\n}\n\nexport class BrainAreaDepthEntry {\n    depth: number;\n    areas: Array<IBrainArea>;\n    selectedAreaIndex: number;\n}\n\nexport class BrainAreaService extends NamedItemDataService<IBrainArea> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    private get service(): IBrainAreaResource {\n        return <IBrainAreaResource>this.dataSource;\n    }\n\n    protected mapQueriedItem(obj: any): IBrainArea {\n        obj.createdAt = new Date(<string>obj.createdAt);\n        obj.updatedAt = new Date(<string>obj.updatedAt);\n\n        return obj;\n    }\n\n    protected resourcePath(): string {\n        return \"brainareas\";\n    }\n\n    protected createCustomResourceMethods(): any {\n        return {\n            queryForDepth: {\n                method: \"GET\",\n                url: this.apiUrl + \"brainareas/depth/:depth\",\n                params: {depth: \"@depth\"},\n                isArray: true\n            },\n            queryForParent: {\n                method: \"GET\",\n                url: this.apiUrl + \"brainareas/parent/:parentId\",\n                params: {parentId: \"@parentId\"},\n                isArray: true\n            }\n        };\n    }\n\n    public brainAreasForDepth(depth: number): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            this.service.queryForDepth({depth: depth}).$promise.then((data: any) => {\n                data = this.registerNewItems(data);\n                resolve(data);\n            }).catch((err: any) => {\n                reject(err);\n            });\n        });\n    }\n\n    public brainAreasForParent(parentId: number): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            this.service.queryForParent({parentId: parentId}).$promise.then((data: any) => {\n                data = this.registerNewItems(data);\n                resolve(data);\n            }).catch((err: any) => {\n                reject(err);\n            });\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/brainAreaService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiNamedItem, NamedItemDataService} from \"./dataService\";\n\nexport interface IFluorophore extends IApiNamedItem {\n}\n\nexport class FluorophoreService extends NamedItemDataService<IFluorophore> {\n\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    protected resourcePath(): string {\n        return \"fluorophores\";\n    }\n\n    public get fluorophores(): Array<IFluorophore> {\n        return this._entityStore.items;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/fluorophoreService.ts\n **/","import {IApiItem, DataService} from \"./dataService\";\nimport ng = require(\"angular\");\n\nimport {BrainAreaService} from \"./brainAreaService\";\nimport {InjectionVirusService} from \"./injectionVirusService\";\n\nexport interface IInjection extends IApiItem {\n    sampleId: string;\n    brainAreaId: string;\n    injectionVirusId: string;\n    fluorophoreId: string;\n}\n\nexport interface IInjectionResource extends ng.resource.IResourceClass<ng.resource.IResource<IInjection>> {\n    injectionsForSample(obj: any): Array<string>;\n}\n\ninterface IInjectionSampleMap {\n    [key: string]: Array<IInjection>;\n}\n\nexport class InjectionService extends DataService<IInjection> {\n\n    public static $inject = [\n        \"$resource\",\n        \"injectionVirusService\",\n        \"brainAreaService\"\n    ];\n\n    private injectionSampleMap: IInjectionSampleMap = {};\n\n    constructor($resource: ng.resource.IResourceService, private injectionVirusService: InjectionVirusService, private brainAreaService: BrainAreaService) {\n        super($resource);\n    }\n\n    protected resourcePath(): string {\n        return \"injections\";\n    }\n\n    protected createCustomResourceMethods(): any {\n        return {\n            injectionsForSample: {\n                method: \"GET\",\n                url: this.apiUrl + \"injections/sample/:id/\",\n                params: {id: \"@id\"},\n                isArray: true\n            }\n        };\n    }\n\n    protected registerNewItem(obj: IInjection): IInjection {\n        let item: IInjection = super.registerNewItem(obj) as IInjection;\n\n        let list: Array<IInjection> = this.injectionSampleMap[item.sampleId];\n\n        if (list === undefined || list === null) {\n            list = [];\n            this.injectionSampleMap[item.sampleId] = list;\n        }\n\n        // Find index of item in list, if present.\n        let matching: Array<number> = list.map((obj, index) => obj.id === item.sampleId ? index : -1).filter(index => index > -1);\n\n        let index: number =  matching.length > 0 ? matching[0] : -1; // list.indexOf(item.sampleId);\n\n        // Add or update.\n        if (index < 0) {\n            list.push(item);\n        } else {\n            list[index] = item;\n        }\n\n        return item;\n    }\n\n    public injectionsForSample(sampleId: string): Array<IInjection> {\n        let injections = this.injectionSampleMap[sampleId];\n\n        if (injections === undefined || injections === null) {\n            injections = [];\n            this.injectionSampleMap[sampleId] = injections;\n        }\n\n        return injections;\n    }\n\n\n    public get injections(): Array<IInjection> {\n        return this._entityStore.items;\n    }\n\n    public getDisplayName(item: IInjection, defaultValue: string = \"\"): string {\n        return \"(\" + this.brainAreaService.getDisplayNameForId(item.brainAreaId) + \":\" + this.injectionVirusService.getDisplayNameForId(item.injectionVirusId) + \")\";\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/injectionService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiNamedItem, NamedItemDataService} from \"./dataService\";\n\nexport interface IInjectionVirus extends IApiNamedItem {\n}\n\nexport class InjectionVirusService extends NamedItemDataService<IInjectionVirus> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    protected resourcePath(): string {\n        return \"viruses\";\n    }\n\n    public get injectionViruses(): Array<IInjectionVirus> {\n        return this._entityStore.items;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/injectionVirusService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiNamedItem, NamedItemDataService} from \"./dataService\";\n\nexport interface IMouseStrain extends IApiNamedItem {\n}\n\nexport class MouseStrainService extends NamedItemDataService<IMouseStrain> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    protected resourcePath(): string {\n        return \"mousestrains\";\n    }\n\n    public get mouseStrains(): Array<IMouseStrain> {\n        return this._entityStore.items;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/mouseStrainService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiIdNumberItem, NumberedItemDataService} from \"./dataService\";\nimport {IInjection} from \"./injectionService\";\n\nexport interface INeuron extends IApiIdNumberItem {\n    injectionId: string;\n    brainAreaId: string;\n    tag: string;\n    keywords: string;\n    x: number;\n    y: number;\n    z: number;\n}\n\ninterface INeuronSampleMap {\n    [key: string]: Array<INeuron>;\n}\n\nexport class NeuronService extends NumberedItemDataService<INeuron> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    // Arrays of neuron objects keyed by injection id.\n    private neuronInjectionMap: INeuronSampleMap = {};\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    protected registerNewItem(rawObj: INeuron): INeuron {\n        let item: INeuron = super.registerNewItem(rawObj) as INeuron;\n\n        let list = this.neuronInjectionMap[item.injectionId];\n\n        if (list === undefined || list === null) {\n            list = [];\n            this.neuronInjectionMap[item.injectionId] = list;\n        }\n\n        // Find index of item in list, if present.\n        let matching: Array<number> = list.map((obj, index) => obj.id === item.injectionId ? index : -1).filter(index => index > -1);\n\n        let index: number =  matching.length > 0 ? matching[0] : -1; // list.indexOf(item.injectionId);\n\n        // Add or update\n        if (index < 0) {\n            list.push(item);\n        } else {\n            list[index] = item;\n        }\n\n        return item;\n    }\n\n    protected resourcePath(): string {\n        return \"neurons\";\n    }\n\n    public neuronsForInjection(injectionId: string): Array<INeuron> {\n        let neurons: Array<INeuron> = this.neuronInjectionMap[injectionId];\n\n        if (neurons === undefined || neurons === null) {\n            neurons = [];\n            this.neuronInjectionMap[injectionId] = neurons;\n        }\n\n        return neurons;\n    }\n\n    public get neurons(): Array<INeuron> {\n        return this._entityStore.items;\n    }\n\n    public getDisplayName(item: INeuron, defaultValue: string = \"\"): string {\n        if (item === null) {\n            return \"\";\n        }\n\n        if (item.tag.length > 0) {\n            return item.idNumber.toString() + \" \" + item.tag;\n        } else {\n            return item.idNumber.toString();\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/neuronService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiNamedItem, NamedItemDataService} from \"./dataService\";\n\nexport interface IRegistrationTransform extends IApiNamedItem {\n    location: string;\n    notes: string;\n}\n\nexport class RegistrationTransformService extends NamedItemDataService<IRegistrationTransform> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    protected resourcePath(): string {\n        return \"registrationtransforms\";\n    }\n\n    public get transforms(): Array<IRegistrationTransform> {\n        return this._entityStore.items;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/registrationTransformService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiIdNumberItem, NumberedItemDataService} from \"./dataService\";\n\nexport interface ISample extends IApiIdNumberItem {\n    sampleDate: Date;\n    tag: string;\n    comment: string;\n    mouseStrainId: string;\n    registrationTransformId: string;\n    injections: Array<string>;\n}\n\nexport class SampleService extends NumberedItemDataService<ISample> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    protected mapQueriedItem(obj: any): ISample {\n        obj = super.mapQueriedItem(obj);\n\n        obj.sampleDate = new Date(<string>obj.sampleDate);\n\n        return obj;\n    }\n\n    protected resourcePath(): string {\n        return \"samples\";\n    }\n\n    public get samples(): Array<ISample> {\n        return this._entityStore.items;\n    }\n\n    public getDisplayName(item: ISample, defaultValue: string = \"\"): string {\n        if (item === null || item.sampleDate === null) {\n            return \"\";\n        }\n\n        let date: string = item.sampleDate.getFullYear() + \"-\" + lpad(item.sampleDate.getMonth() + 1, 2) + \"-\" + lpad(item.sampleDate.getDate(), 2);\n\n        if (item.tag.length > 0) {\n            return item.idNumber.toString() + \" \" + item.tag + \" (\" + date + \")\";\n        } else {\n            return item.idNumber.toString() + \" (\" + date + \")\";\n        }\n    }\n}\n\nfunction lpad(n: number, width: number, z = \"0\"): string {\n    let str: string = n + \"\";\n    return str.length >= width ? str : new Array(width - str.length + 1).join(z) + str;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/sampleService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiNamedItem, NamedItemDataService} from \"./dataService\";\n\nexport interface IStructureIdentifier extends  IApiNamedItem {\n    value: number;\n}\n\nexport class StructureIdentifierService extends NamedItemDataService<IStructureIdentifier> {\n\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    protected resourcePath(): string {\n        return \"structures\";\n    }\n\n    public get structures(): Array<IStructureIdentifier> {\n        return this._entityStore.items;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/structureIdentifierService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiItem, DataService} from \"./dataService\";\n\nexport interface ITracingNode extends IApiItem {\n}\n\nexport interface ITracingNodeResource extends ng.resource.IResourceClass<ng.resource.IResource<ITracingNode>> {\n    nodesForStructure(obj: any): Array<ITracingNode>;\n}\n\nexport class TracingNodeService extends DataService<ITracingNode> {\n    public static $inject = [\n        \"$resource\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService) {\n        super($resource);\n    }\n\n    private get service(): ITracingNodeResource {\n        return <ITracingNodeResource>this.dataSource;\n    }\n\n\n    protected resourcePath(): string {\n        return \"nodes\";\n    }\n\n    protected createCustomResourceMethods(): any {\n        return {\n            nodesForStructure: {\n                method: \"GET\",\n                url: this.apiUrl + \"nodes/findByStructure/:id/\",\n                params: {id: \"@id\"},\n                isArray: true\n            }\n        };\n    }\n\n    /*\n     protected createResource(location: string): ITracingNodeResource {\n     return <ITracingNodeResource>this.$resource(location + \"nodes/:id\", {id: \"@id\"}, {\n     nodesForStructure: {\n     method: \"GET\",\n     url: location + \"nodes/findByStructure/:id/\",\n     params: {id: \"@id\"},\n     isArray: true\n     }\n     });\n     }\n     */\n\n    public get nodes(): Array<ITracingNode> {\n        return this._entityStore.items;\n    }\n\n    public nodesForStructure(structureId: string): Promise<Array<ITracingNode>> {\n        return new Promise<Array<ITracingNode>>((resolve, reject) => {\n            this.service.nodesForStructure({id: structureId}).$promise.then((data) => {\n                resolve(data);\n            }).catch((err) => {\n                reject(err);\n            });\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/tracingNodeService.ts\n **/","import ng = require(\"angular\");\n\nimport {IApiItem, DataService} from \"./dataService\";\n\nexport interface ITracing extends IApiItem {\n    filename: string;\n    annotator: string;\n    lengthMicrometers: number;\n    neuronId: string;\n    structureIdentifierId: string;\n}\n\nexport interface ITracingResource extends ng.resource.IResourceClass<ng.resource.IResource<ITracing>> {\n    nodes(obj: any): ITracing;\n}\n\nexport class TracingService extends DataService<ITracing> {\n    public static $inject = [\n        \"$resource\",\n        \"$http\"\n    ];\n\n    constructor($resource: ng.resource.IResourceService, private $http: ng.IHttpService) {\n        super($resource);\n    }\n\n    private get service(): ITracingResource {\n        return <ITracingResource>this.dataSource;\n    }\n\n    protected resourcePath(): string {\n        return \"tracings\";\n    }\n\n    protected createCustomResourceMethods(): any {\n        return {\n            nodes: {\n                method: \"GET\",\n                url: location + \"tracings/:id/nodes/\",\n                params: {id: \"@id\"},\n                isArray: true\n            }\n        };\n    }\n\n    public get tracings(): Array<ITracing> {\n        return this._entityStore.items;\n    }\n\n    public uploadSwcFile(theFile: any, tracingInfo: any): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            let url = this.apiUrl + \"upload\";\n\n            let fd = new FormData();\n\n            fd.append(\"contents\", theFile);\n\n            this.$http.post<ITracing>(url, fd, {\n                params: tracingInfo,\n                transformRequest: ng.identity,\n                headers: {\"Content-Type\": undefined}\n            }).then((result) => {\n                this.dataSource.get({id: result.data.id}, (fullItem: any) => {\n                    this._entityStore.addItem(fullItem);\n                    resolve(fullItem);\n                });\n            }).catch((error) => {\n                console.log(error);\n                reject(error);\n            });\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/tracingService.ts\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 14\n ** module chunks = 0\n **/"],"sourceRoot":""}